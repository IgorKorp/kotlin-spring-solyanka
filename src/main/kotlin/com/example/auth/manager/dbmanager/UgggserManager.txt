package com.example.auth.manager.dbmanager

import com.example.auth.dto.CreateUser
import com.example.auth.entities.User
import com.google.gson.Gson
import org.hibernate.SessionFactory
import org.springframework.beans.factory.annotation.Autowired
import org.springframework.context.annotation.Bean
import org.springframework.transaction.annotation.Transactional
import org.springframework.validation.annotation.Validated
import javax.validation.Valid

open class UserManager(
    private val sessionFactory: SessionFactory,
    ) {
//open class UserManager() {
//    @Autowired
//    private lateinit var sessionFactory: SessionFactory

    open fun createUser(@Valid json: String): CreateUser? {
        val createUser = Gson().fromJson(json, CreateUser::class.java)
        return createUser
    }

    @Transactional
    open fun getUser(id: Int): User? {
        return sessionFactory.currentSession.get(User::class.java, id)
    }

    @Transactional
    open fun getUsers(): List<User> {
        return sessionFactory.currentSession.createCriteria(User::class.java)
            .list() as List<User>
    }


}